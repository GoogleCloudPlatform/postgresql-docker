#!/bin/bash -eu
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

readonly BLACKLIST_FILE="/tmp/blacklisted_packages.list"
readonly SOURCES_D_BLACKLIST_FILE="/tmp/blacklisted_sources.list"

function list_all_packages() {
  dpkg-query -W | cut -f 1 | cut -d ":" -f 1 | sort
}

function list_packages() {
  comm -13 <(sort "${BLACKLIST_FILE}") <(list_all_packages)
}

function list_gpl_packages() {
  for pkg in $(list_packages); do
    if egrep -q '\WGPL\W' "/usr/share/doc/${pkg}/copyright"; then
      echo "${pkg}"
    fi
  done
}

function blacklist_all_current() {
  list_all_packages >> "${BLACKLIST_FILE}"
}

function blacklist_nothing() {
  cat /dev/null > "${BLACKLIST_FILE}"
}

function blacklist() {
  for pkg in $@; do
    echo "${pkg}" >> "${BLACKLIST_FILE}"
  done
}

function exclude_sources() {
  cat /dev/null > "${SOURCES_D_BLACKLIST_FILE}"
  for filename in $@; do
    echo "${filename}" >> "${SOURCES_D_BLACKLIST_FILE}"
  done
}

function all_sources_list_files() {
  shopt -s nullglob
  for sources_file in /etc/apt/sources.list /etc/apt/sources.list.d/*; do
    echo "${sources_file}"
  done
  shopt -u nullglob
}

function deb_srcs() {
  local -r blacklist_file="$1"
  local -r tmp_file="$(mktemp)"
  for sources_file in \
    $(comm -13 <(sort "${blacklist_file}") <(all_sources_list_files)); do
    cat "${sources_file}" | grep -e '^deb ' | sed 's/^deb /deb-src /g' >> "${tmp_file}"
  done
  cat "${tmp_file}" | sort | uniq
  rm -f "${tmp_file}"
}

function download_source_code() {
  local -r target_dir="$1"
  local -r src_list_file="/etc/apt/sources.list.d/all-src.list"

  if ! [[ -f "${BLACKLIST_FILE}" ]]; then
    echo "No package blacklist found. This might download a lot of code."
    echo "If it is really desired, run with argument 'blacklist-nothing' first."
    exit 1
  fi

  # Add current deb entries as deb-src entries from all sources list file,
  # except the ones in the blacklist if it exists.
  if [[ -f "${SOURCES_D_BLACKLIST_FILE}" ]]; then
    deb_srcs "${SOURCES_D_BLACKLIST_FILE}" > "${src_list_file}"
  else
    deb_srcs /dev/null > "${src_list_file}"
  fi
  apt-get update

  cd "${target_dir}"
  for pkg in $(list_gpl_packages); do
    echo "--> Downloading source code for GPL package ${pkg}..."
    apt-get source -q -d "${pkg}"
  done

  rm -f "${src_list_file}" "${BLACKLIST_FILE}" "${SOURCES_D_BLACKLIST_FILE}"
  apt-get update
}

action="$1"
case "${action}" in
  blacklist-all-current)
    blacklist_all_current
    ;;
  blacklist)
    shift
    blacklist "$@"
    ;;
  blacklist-nothing)
    blacklist_nothing
    ;;
  exclude-sources)
    shift
    exclude_sources "$@"
    ;;
  download)
    shift
    download_source_code "$1"
    ;;
  *)
    echo "Usage:"
    echo "  blacklist-all-current"
    echo "    Add all currently installed packages into the blacklist."
    echo "    Blacklisting commands are accumulative."
    echo "  blacklist PACKAGE_NAME..."
    echo "    Explicitly add specific package names into the blacklist."
    echo "    Blacklisting commands are accumulative."
    echo "  blacklist-nothing"
    echo "    Reset the package blacklist to empty."
    echo "  exclude-sources FILE_NAME..."
    echo "    Exclude one or more sources.d list files from being used"
    echo "    for deriving deb-src entries. Note that only the most"
    echo "    recent exclude-sources run has effects. To make the"
    echo "    exclusion list empty, reverting any previous command,"
    echo "    run this without any file names."
    echo "  download TARGET_DIRECTORY"
    echo "    Run this to download source code for new GPL packages"
    echo "    that are not in the blacklist."
    exit 1
    ;;
esac
